
1、关于函数中的arguments
//自动更新
//arguments对象为其内部属性以及函数形式参数创建getter和setter方法
//因此，改变形参的值会影响到arguments对象的值，反之亦然。
function changeArgument(arr){
arr[0] = arr[2];//10,1,10
}
function change(a,b,c){
c = 10;//1,1,10
changeArgument(arguments);
return a + b + c;
}
console.log('change results: %s',change(1,1,1));//change results: 21
function f(a){
//当在严格模式下，不会创建getter和setter方法
"use strict";
a = 42;
return [a,arguments[0]];//[42,17]
}
var pair = f(17);
console.log(pair);// [42, 17]
console.log(pair[0] === 42);//true

2、hasOwnProperty函数
var foo={
  bar:'abc',
  hasOwnProperty:function(){
  return false;
  }
};

console.log(foo.hasOwnProperty('bar'));//false
console.log(({}).hasOwnProperty.call(foo,'bar'));//true

3、JS中所有变量都是对象，除了null和undefined
false.toString();//"false"
[].toString();//""
[1,2].toString();//"1,2"
function Foo(){}
Foo.bar = 1;
Foo.bar;//1

数字的字面值不是对象。
2.toString();//error
var a = 2;
a.toString();//"2"
2..toString();//"2"
2 .toString();//"2"
(2).toString();//"2"

4、访问属性时，使用点操作符或者中括号操作符;当属性是关键字或有空格时，使用中括号;删除属性使用delete;属性名一般加入双引号


